ALGORITMO DE CLASIFICACION

    -> Vamos a clasficiar dado un array por sus tipos

    -> Si tengo un array: [1, 2, true, "A", "B"]
    -> tipos: 
        - number
        - boolean
        - string

    -> Input: [1,2,"B","C","B"] Output: w: [1,2], z: [“B”,”B”,”C”]

    A1: 

        1. Recorrer el Input
        2. Verificar cada elemento por el tipo de dato evidente
        3. Luego clasfico y agrego a la estructura w o z

            -> w es el array donde todos los elementos son number
            -> z es el array donde todos los elementos son string

        ---

        PSEUDO CODIGO


        FOR i = 0 -> Input.length

            IF TYPEOF Input[i] === 'number'

                w.push( Input[i] )

            ELSE IF TYPEOF Input[i] === 'string'
                
                z.push( Input[i] )
        END


        Por que terminamos con un ELSE IF y no un ELSE?

    EJERCICIO D: 
        
        Input: v: [1,true,”B”,”C”] w: [“string”,”number”] output: z: [1,”B”,”C”]
        Generar el output clasificando con los tipos encontrados en w.


        1. Recorro Input
        2. Veirifico si es string agrego el Input[i] en z o si es number agrego el Input[i] en z


        FOR i = 0 -> Input.length

            IF TYPEOF Input[i] === 'number'

                z.push( Input[i] )

            ELSE IF TYPEOF Input[i] === 'string'
                
                z.push( Input[i] )
        END

        Problema: Tenemos que saber si el TYPEOF Input[i] esta dentro del array w
        - Para saber si un string esta dentro de w
            w.includes(variable) -> Verificamos que la variable este dentro de w
        
        - w.includes( TYPEOF Input[i] )
            -> w.includes('string')
            -> w.includes('number')
            ...
        
        FOR i = 0 -> Input.length

            IF w.includes(TYPEOF Input[i])

                z.push( Input[i] )

        END
    
    -----

    EJERCICIOS DEBERES: 

        1.b
        2.a (completo)


BUSQUEDA NORMAL

    -> Desarrollar un algoritmo de búsqueda normal para los siguientes arrays
        Input: [“Aba”,”AAb”,”b”,”B”] Output: [“Aba”,”AAb”]
        -> Encontrar el flag y comparador correcto para dado Output

        Tengo que comparar dos elementos del mismo valor y tipo

            -> Uno de los elementos va a ser input[i]
            -> El otro va a ser el flag

            -> Busqueda: input[i] <comparador> flag

            <comparador> : === Quiero verificar que sean elementos identicos
            <comparador> : .includes(...) Quiero verificar que el flag esta incluido en el input

        ---

        const input = ["Aba","AAb","b","B"] 
        output = [“Aba”,”AAb”]

        CASO 1

        flag = "a" / String
        comparador: === 

        FOR i = 0 -> input.length

            IF ( flag === input[i] )

                output.push(input[i])

        SI i = 0 

            ES flag === input[0]
            NO ES
            output []
        -- 


        KEY SENSITIVE
            -> Hace diferencia de valor entre mayusculas y minusculas
            -> Vamos a eliminar esa diferencia transformando todo en mayuscula o minusculas
        

         FOR i = 0 -> input.length

            IF ( flag.toUpperCase() === input[i].toUpperCase() ) // Se estaria comparando todo en mayuscula

                output.push(input[i])

             SI i = 0 

                ES flag === input[0] // "A" === "ABA"
                NO ES
                output []
            -- 
        
        Vamos a utilizar el comparador includes

         SI i = 0 

                ES input[0].include(flag)  // Si "A" esta incluido "ABA"
                SI ES CIERTO
                output ["ABA"]
            -- 
        
        SI i = 1

                ES input[1].include(flag)  // Si "A" esta incluido "AAB"
                SI ES 
                output ["Aba", "AAb"]
            -- 

        SI i = 2, 3

                output ["Aba", "AAb"]


    Input: [1,”2”,”0”,”1b”,”1”] Output: [1,”1b”,”1”]
        
        Encontrar el flag y comparador correcto para dado Output
